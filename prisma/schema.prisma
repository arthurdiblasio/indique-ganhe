generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Partner {
  id        String   @id @default(uuid())
  name      String
  cnpj      String   @unique
  createdAt DateTime @default(now())

  users  User[]
  people Person[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  partnerId String
  partner   Partner @relation(fields: [partnerId], references: [id])
}

model Person {
  id        String   @id @default(uuid())
  name      String
  phone     String   @unique()
  createdAt DateTime @default(now())
  balance   Float    @default(0)

  partnerId String
  partner   Partner @relation(fields: [partnerId], references: [id])

  indicationsMade     Indication[] @relation("IndicationsMade")
  indicationsReceived Indication[] @relation("IndicationsReceived")
  statements          Statement[]
}

enum StatementType {
  CREDIT
  DEBIT
}

model Statement {
  id        String        @id @default(uuid())
  personId  String
  person    Person        @relation(fields: [personId], references: [id])
  amount    Float
  type      StatementType
  reason    String
  createdAt DateTime      @default(now())
}

model Indication {
  id              String   @id @default(uuid())
  procedure       String
  planValue       Decimal  @db.Decimal(10, 2)
  commissionValue Decimal  @db.Decimal(10, 2)
  createdAt       DateTime @default(now())
  expiresAt       DateTime @default(now())
  isExpired       Boolean  @default(false)

  indicatedId String
  indicated   Person @relation("IndicationsReceived", fields: [indicatedId], references: [id])

  indicatedById String
  indicatedBy   Person @relation("IndicationsMade", fields: [indicatedById], references: [id])
}
